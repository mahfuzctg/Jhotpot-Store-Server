// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// 

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  role               UserRole
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?
  vendor             Vendor?


  @@map("users")
}


model Admin {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  profilePhoto  String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [email], references: [email])

  @@map("admins")
}



model Vendor {
  id            String   @id @default(uuid())
  name          String
  email         String   @unique
  shopName      String?
  logo          String?
  description   String?
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt


  user User @relation(fields: [email], references: [email])

  @@map("vendors")
}


model Customer {
  id                String   @id @default(uuid())
  name              String
  email             String   @unique
  profilePhoto      String?
  isDeleted         Boolean  @default(false)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("customers")
}




model Product {
  id             String   @id @default(uuid())
  name           String
  price          Float
  inventoryCount Int
  description    String?
  discount       Float?
  categoryId     String
  vendorId       String
 


  @@map("products")
}



model Category {
  id       String   @id @default(uuid())
  name     String   @unique
  image    String


  @@map("categories")
}
model Order {
  id         String   @id @default(uuid())
  customerId String
  vendorId   String
  totalPrice Float

  transactionId String  @unique



  @@map("orders")
}
model OrderDetail {
  id         String   @id @default(uuid())
  orderId    String
  productId  String
  quantity   Int
  pricePerUnit Float



  @@map("order_details")
}
model Review {
  id         String   @id @default(uuid())
  productId  String
  customerId String
  rating     Int
  comment    String?

 

  @@map("reviews")
}

model Follow {
  id          String   @id @default(uuid())
  customerId  String
  vendorId    String



  @@map("followers")
}

model RecentProductView {
  id          String   @id @default(uuid())
  customerId  String
  productId   String
  viewedAt    DateTime @default(now())



  @@map("recent_product_views")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  VENDOR
  CUSTOMER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}